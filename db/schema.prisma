generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = ["groupBy"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coach {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  handle      String   @unique
  name        String   @unique
  teamId      Int?
  type        String?
  isAssistant String?
  team        Team?    @relation(fields: [teamId], references: [id])
}

model Player {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime
  handle    String   @unique
  name      String   @unique
  slug      String   @unique
  teamId    Int?
  height    String
  weight    String
  number    String?
  position  String?
  team      Team?    @relation(fields: [teamId], references: [id])
}

model ColorScheme {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime
  primary   String
  secondary String
  teamId    Int?
  team      Team?    @relation(fields: [teamId], references: [id])
}

model Team {
  id             Int           @id @default(autoincrement())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime
  handle         String        @unique
  name           String        @unique
  slug           String        @unique
  city           String
  abbreviation   String        @unique
  logo           String        @unique
  logoSlug       String        @unique
  wins           Int?
  losses         Int?
  winPercentage  Float?
  conference     String
  division       String
  established    String
  primaryColor   String
  secondaryColor String
  coaches        Coach[]
  players        Player[]
  colorScheme    ColorScheme[]
}
